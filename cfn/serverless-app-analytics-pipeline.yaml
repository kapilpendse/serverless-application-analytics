AWSTemplateFormatVersion: 2010-09-09
Description: Stack for Firehose Delivery Stream S3 Destination.
Parameters:
  s3BucketName:
    Description: "Name of the S3 bucket to store raw data in. A new bucket with this name will be created."
    Type: String
    MinLength: 1
    ConstraintDescription: "A bucket name must be specified. S3 bucket name must be globally unique. https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html"
  rawDataBatchSizeInSeconds:
    Description: "Firehose delivers data into the destination in batches. Set the minimum batch size, in seconds."
    Type: String
    Default: 60
    AllowedPattern: "([6-8][0-9]|9[0-9]|[1-8][0-9]{2}|900)"
    ConstraintDescription: Must be a value between 60 and 900 (inclusive).
  rawDataBatchSizeInMBs:
    Description: "Firehose delivers data into the destination in batches. Set the minimum batch size, in megabytes."
    Type: String
    Default: 1
    AllowedPattern: "([1-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-8])"
    ConstraintDescription: "Must be a value between 1 and 128 (inclusive)."
  databaseName:
    Description: "Raw data will be analyzed and made queryable through a logical database. Give it a name."
    Type: String
    MinLength: 1
    ConstraintDescription: "Database name is required."
Resources:
  deliveryStream:
    DependsOn:
      - deliveryPolicy
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      ExtendedS3DestinationConfiguration:
        BucketARN: !Join 
          - ''
          - - 'arn:aws:s3:::'
            - !Ref s3bucket
        BufferingHints:
          IntervalInSeconds: !Ref rawDataBatchSizeInSeconds
          SizeInMBs: !Ref rawDataBatchSizeInMBs
        CompressionFormat: UNCOMPRESSED
        Prefix: raw/firehose/
        RoleARN: !GetAtt deliveryRole.Arn
        ProcessingConfiguration:
          Enabled: 'false'
  s3bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref s3BucketName
      VersioningConfiguration:
        Status: Enabled
  deliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'
  deliveryPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: firehose_delivery_policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref s3bucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref s3bucket
                  - '*'
      Roles:
        - !Ref deliveryRole
  glueRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"
  glueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: "app-analytics-database"
  MyCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: "app-analytics-crawler"
      Role: !GetAtt glueRole.Arn
      DatabaseName: !Ref glueDatabase
      Targets:
        S3Targets:
          - Path: !Join [ '', [ !Ref s3bucket, "/raw/firehose" ] ]
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Schedule:
        ScheduleExpression: "cron(0/10 * ? * MON-FRI *)"
Outputs:
  firehoseArn:
    Description: "This is the ARN of the Amazon Kinesis Data Firehose delivery stream that has been provisioned. You can point all your application logs to this delivery stream."
    Value: !GetAtt deliveryStream.Arn
  s3Arn:
    Description: "This is the ARN of the Amazon S3 bucket that has been provisioned. Kinesis Firehose will store all your data into this bucket, under the prefix 'raw/firehose/'."
    Value: !GetAtt s3bucket.Arn
